h1 <- t(apply(h,1,function(x) (x/sum(x)-m/sum(m)) ))
#h1 <- t(apply(h,1,function(x) (x/sum-m)/ssd  ))
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
sum( apply(abs(mat),1,max) > 0.7 )
spacemut::draw.signature(h1[5,])
spacemut::draw.signature(h1[4,])
spacemut::draw.signature(h1[4,])
spacemut::draw.signature(h1[1,])
spacemut::draw.signature(h1[2,])
spacemut::draw.signature(h1[3,])
spacemut::draw.signature(h1[4,])
spacemut::draw.signature(h1[5,])
spacemut::draw.signature(h1[6,])
spacemut::draw.signature(h1[7,])
spacemut::draw.signature(h1[8,])
spacemut::draw.signature(h1[9,])
h1 <- t(apply(h,1,function(x) (x/sum(x)-m/sum(m))/ssd ))
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
sum( apply(abs(mat),1,max) > 0.7 )
spacemut::draw.signature(h1[1,])
spacemut::draw.signature(h1[1,])
spacemut::draw.signature(h1[2,])
spacemut::draw.signature(h1[3,])
spacemut::draw.signature(h1[4,])
spacemut::draw.signature(h1[5,])
spacemut::draw.signature(h1[6,])
spacemut::draw.signature(h1[7,])
spacemut::draw.signature(h1[8,])
spacemut::draw.signature(h1[9,])
spacemut::draw.signature(h1[10,])
nmf1 <- nmf(V,c(10),nrun=1)#,.opt = "vp30")
?nmf
nmf1 <- nmf(V,c(10),nrun=2)#,.opt = "vp30")
inds <- sample(1:nrow(rate),10000)
V <- rate[inds,]
nmf1 <- nmf(V,c(10),nrun=1,.opt = "vp30")
res <- nmf1#[[1]]
V.hat <- fitted(res)
w <- basis(res)
h <- coef(res)
m <- apply(V,2,mean)
ssd <- apply(V,2,sd)
h1 <- t(apply(h,1,function(x) (x/sum(x)-m/sum(m))/ssd ))
#h1 <- t(apply(h,1,function(x) (x/sum-m)/ssd  ))
w1 <- t(t(w)*apply(h,1,function(x) sum(x)  ))
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
sum( apply(abs(mat),1,max) > 0.7 )
spacemut::draw.signature(h1[1,])
spacemut::draw.signature(h1[1,])
spacemut::draw.signature(h1[2,])
spacemut::draw.signature(h1[3,])
spacemut::draw.signature(h1[4,])
spacemut::draw.signature(h1[5,])
spacemut::draw.signature(h1[6,])
spacemut::draw.signature(h1[7,])
spacemut::draw.signature(h1[8,])
spacemut::draw.signature(h1[9,])
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
mat
comp.info1 <- extract.comp(rate.new,10)
icM1 <- comp.info1[[1]]
icS1 <- comp.info1[[2]]
mat = (cor(icM1,icM1[xcompl,],method="spearman")); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(10),main="ICA-spectra" )
sum( abs(mat) > 0.7 )
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(10),main="ICA-spectra" )
sum( abs(mat) > 0.7 )
sum( abs(mat) > 0.8 )
sum( abs(mat) > 0.7 )
sum( abs(mat) > 0.8 )
sum( abs(mat) > 0.7 )
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
sum( abs(mat) > 0.7 )
sum( apply(abs(mat),1,max) > 0.7 )
mat = (cor(icM1,icM1[xcompl,],method="spearman")); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(10),main="ICA-spectra" )
sum( abs(mat) > 0.7 )
sum( apply(abs(mat),1,max) > 0.7 )
sum( abs(mat) > 0.8 )
sum( apply(abs(mat),1,max) > 0.8 )
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
sum( apply(abs(mat),1,max) > 0.8 )
sum( apply(abs(mat),1,max) > 0.7 )
inds <-1:nrow(rate)
V <- rate[inds,]
#V <- t(t(V)/apply(V,2,mean))
#V <- t(apply(V,1,function(x) x/sum(x) ))
nmf1 <- nmf(V,c(8),nrun=1,.opt = "vp30")
#saveRDS(nmf.ica,"/d0/home/solrust/mutations/topmed/nmf_ica.rds")
mat = (cor(icM,icM[xcompl,],method="spearman")); #mat[mat < 0] = 0
mat
spacemut::draw.signature(icM[,1])
spacemut::draw.signature(icM[,2])
spacemut::draw.signature(icM[,3])
spacemut::draw.signature(icM[,4])
res <- nmf1#[[1]]
V.hat <- fitted(res)
w <- basis(res)
h <- coef(res)
m <- apply(V,2,mean)
ssd <- apply(V,2,sd)
h1 <- t(apply(h,1,function(x) (x/sum(x)-m/sum(m))/ssd ))
#h1 <- t(apply(h,1,function(x) (x/sum-m)/ssd  ))
w1 <- t(t(w)*apply(h,1,function(x) sum(x)  ))
mat = cor(t(h1[,]),t(h1[,xcompl]),method="spearman"); #mat[mat < 0] = 0
#mat = cor(t(h1[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((icM[,]),icM[,],method="pearson"); #mat[mat < 0] = 0
#mat = cor((w1[,]),method="pearson"); #mat[mat < 0] = 0
heatmap.2( mat^3,key=TRUE,Rowv=NA,Colv=NA,trace="none",col = colorRampPalette(c("blue","grey80",'red'))(40) )
apply(abs(mat),1,max)
sum( apply(abs(mat),1,max) > 0.8 )
sum( apply(abs(mat),1,max) > 0.7 )
lengt(inds)
length(inds)
q()
?volnmf_main
library(vrnmf)
?volnmf_main
?infer_intensities
library(vrnmf)
library(spacemut)
rate <- read.table("http://pklab.med.harvard.edu/ruslan/spacemut/tracks/TOPMed_10kb.txt",header=TRUE)
rate.info <- rate
#rownames(rate) <- rate[,1]
head(rate.info[,1:6])
head(rate.info[,1:6])
head(rate.info[,1:6])
knitr::kable(head(rate.info[,1:6]))
rate <- rate.info[,-c(1:3)]
vol.info <- vol_preprocess(rate)
fctr <- 7.9
fctr <- 7.9
vr <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
S <- vr$C*vol$col.factors/colMeans(rate)
S <- vr$C*vol.info$col.factors/colMeans(rate)
str(S)
head(S)
rownames(S) <- colnames(rate)
draw.signature(S[,1])
draw.signature(S[,2])
draw.signature(S[,2])
draw.signature(S[,2])
draw.signature(S[,2])
draw.signature(S[,2])
```{r,warning=FALSE, message=FALSE, fig.width = 5, fig.height = 4}
draw.signature(S[,2])
draw.signature(S[,2])
draw.signature(S[,2])
draw.signature(S[,2])
plot.reflection.matrix(S)
plot.reflection.matrix(S)
colnames(S) <- paste("comp.",1:ncol(S))
plot.reflection.matrix(S)
plot.reflection.matrix(S)
reflection.scatter(10,10,icM)
reflection.scatter(10,10,S)
reflection.scatter(3,3,S)
reflection.scatter(3,3,S)
reflection.scatter(1,11,S)
reflection.scatter(9,14,S)
reflection.scatter(3,3,S)
?factor_intensities
intensities <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = TRUE)
factor_intensities <- function (C, X, fit.nmf = TRUE, fit.factor = FALSE, qp.exact = FALSE,
n.iter = 2e+2, qp.iter = 1e+1,   rel.error.cutoff = 1e-5,
extrapolate = TRUE, extrapolate.const = TRUE, extrapolate.convex = FALSE,
q.factor = 1,
verbose = TRUE, n.cores = 1)
{
X <- t(X)
####
#X <- as.matrix(rate.rec)
X <- apply(X,2,function(x)x/sd(x))
#extrapolate.const <- TRUE
#extrapolate.convex <- FALSE
#extrapolate.majorate <- FALSE
#verbose = TRUE
#qp.exact <- FALSE
#fit.nmf <- TRUE; fit.factor <- FALSE
#n.cores <- 1
#n.iter <- 1e+3
#qp.iter <- 1e+1
#rel.error.cutoff <- 1e-5
#q.factor <- 1
####
# prepare matrices for QP
D <- t(C) %*% C
dmat <- X %*% C
#if (qp.exact == TRUE){
sv <- svd(D)
R <- t(sv$u %*% diag(sqrt(sv$d)))
R1 <- t(solve(R))
#}
iter <- 1
inten.update <- inten <- t(matrix(1, nrow = nrow(X), ncol = ncol(C)))
spec.offset.update <- spec.offset.old <- spec.offset <- rep(1,nrow(C))
int.offset.update <- int.offset <- rep(1,nrow(X))
objs <- vector(); sbio <- vector(); soff <- vector()
## precalculate some matrices/variables
grad.main <- X%*%C
X.offset.const <- grad.main%*%t(R1)
C1 <- C%*%t(R1)
Lip.int <- max( eigen(t(C)%*%C)$values )
##
q <- c(1,(1+sqrt(5))/5)
while (iter < n.iter){
#print(paste("iteration.. ",iter))
inten.old <- inten
### estimate intensities using exact QP
if (qp.exact == TRUE){
if (iter > 1) dmat <- (X - X.offset) %*% C
#dmat1 <- dmat%*%t(R1)
fctr <- as.numeric(spec.offset.update%*%C1)
inten <- do.call(cbind, parallel::mclapply(1:nr, function(i) {
ft1 <- nnls(R, X.offset.const[i,] - int.offset.update[i]*fctr)
ft1$x
}, mc.cores = 1, mc.preschedule = TRUE))
}
### estimate intensities using inexact QP via gradient decent with extrapolation
if (qp.exact == FALSE){
grad.offset <- as.matrix(int.offset.update)%*%(as.matrix(spec.offset.update%*%C))
inten.update <- inten.old
q1 <- c(1,(1+sqrt(5))/5)
j <- 1
rel.error <- 1e+6
while (j < qp.iter){
#for (j in 1:qp.iter){
q1[j+1] <-  (1+sqrt(1+4*q1[j]^2))/2
inten.old1 <- inten
grad.bio <- t(inten.update)%*%D
grad.inten <- -grad.main + grad.offset + grad.bio
# update inten
inten <- inten.update - t(grad.inten) / Lip.int
inten[inten < 0] <- 0
# extrapolate inten
inten.update <- inten
extr1 <- (q1[j]-1)/q1[j+1]
if (extrapolate == TRUE) inten.update <- inten + extr1 * (inten - inten.old1)
rel.error <- sum( (inten - inten.old1)^2 )/sum( (inten)^2 )
#print(paste(j,rel.error))
j <- j + 1
}
}
inten.update <- inten
if (extrapolate == TRUE){
extr <- (q[iter] - 1) / q[iter+1]
inten.update <- inten + extr * (inten - inten.old)
}
# fit NMF or offset spectrum
X.proc <- X - t(inten.update)%*%t(C)
spec.offset.old <- spec.offset
int.offset.old <- int.offset
if (fit.nmf == TRUE){
iter1 <- 1
rel.error <- 1e+6
while(iter1 < 10 & rel.error > rel.error.cutoff ){
spec.offset.prev <- spec.offset
spec.offset <- (t(int.offset)%*%X.proc)/sum(int.offset^2)
spec.offset <- as.numeric(pmax(spec.offset, 0))
int.offset <- (X.proc%*%spec.offset)/sum(spec.offset^2)
int.offset <- as.numeric(pmax(int.offset, 0))
rel.error <- sqrt(sum((spec.offset-spec.offset.prev)^2))/sqrt(sum((spec.offset)^2))
iter1 <- iter1 + 1
}
}else if (fit.factor == TRUE){
spec.offset <- colMeans(X.proc)
spec.offset <- pmax(0,spec.offset)
}
spec.offset.update <- spec.offset
int.offset.update <- int.offset
if (extrapolate==TRUE){
extr <- (q[iter]-1)/q[iter+1]
spec.offset.update <- spec.offset + extr*(spec.offset - spec.offset.old)
int.offset.update <- int.offset + extr*(int.offset - int.offset.old)
}
if (verbose == TRUE & iter %% 5 == 0){
X.offset <- as.matrix(int.offset)%*%t(as.matrix(spec.offset))
X.bio <- t(inten)%*%t(C)
X.resid <- X - X.offset - X.bio
objs <- c(objs, sqrt(sum((X.resid)^2)))
sbio <- c(sbio, sum(X.bio))
soff <- c(soff, sum(X.offset))
par(mfrow=c(2,1),mar=c(2,2,0.5,0.5))
plot(1:length(objs), objs, cex = 0.5)
plot(1:length(sbio), sbio, cex = 0.5, col = "darkred", ylim=c(min(c(sbio,soff)),max(c(sbio,soff))))
points(1:length(soff), soff, cex = 0.5, col = "darkgreen")
print(paste("iteration:",iter))
print(paste("offset difference:",sqrt(sum((spec.offset-spec.offset.old)^2))/sqrt(sum((spec.offset)^2)) ))
print( sum(X.bio) )
print( sum(X.offset) )
print(paste("objective:", sqrt(sum((X.resid)^2))))
}
iter <- iter  + 1
if (extrapolate.const == TRUE){
q[iter+1] <- 1 + q.factor
}else if (extrapolate.convex == TRUE){
q[iter+1] <- (1+sqrt(1+4*q[iter]^2))/2
}else if (extrapolate.majorate == TRUE){
q[iter + 1] <- min(q.upper, q[iter + 1] * rate.q.up)
}
}
rownames(inten) <- paste("comp", 1:ncol(C), sep = "")
return(list(intensities = inten, spec.offset = spec.offset, int.offset = int.offset))
}
intensities <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = TRUE)
str(intensities)
str(intensities)
intensities.info <- intensities
```
intensities <- cbind(rate.info[,1:3],t(intensities.info$intensities))
```
intensities <- cbind(rate.info[,1:3],t(intensities.info$intensities))
head(intensities[,1:6])
intensities <-t(intensities.info$intensities)
```
plot.intensities(intensities[,3], info, chr=8, start=0,end=4e+7,  span.wind=30)
```
```
plot.intensities(intensities[,3], rate.info, chr=8, start=0,end=4e+7,  span.wind=30)
```
plot.intensities(intensities[,1], rate.info, chr=8, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,1], rate.info, chr=8, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,1], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,2], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,2], rate.info, chr=16, start=0,end=4e+7,  span.wind=100)
knitr::knit(input='/d0/home/solrust/mutations/spacemut/vignettes/vrnmf_germline.Rmd',
output='/d0/home/solrust/mutations/spacemut/vignettes/vrnmf_germline.md')
dim(gm)
draw.signature(S[1])
draw.signature(S[,1])
draw.signature(S[,2])
draw.signature(S[,3])
draw.signature(S[,4])
draw.signature(S[,5])
draw.signature(S[,6])
draw.signature(S[,7])
draw.signature(S[,8])
draw.signature(S[,9])
draw.signature(S[,10])
draw.signature(S[,11])
plot.intensities(intensities[,10], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,10], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,2], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,1], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,3], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,4], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,5], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,6], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,7], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,8], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
draw.signature(S[,8])
plot.intensities(intensities[,9], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,9], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,10], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,11], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,12], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,13], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,14], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,15], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
plot.intensities(intensities[,2], rate.info, chr=16, start=0,end=4e+7,  span.wind=30)
xx <- read.table("/d0/home/solrust/mutations/paper_analysis/tracks/gnomAD_100kb.txt")
dim(xx)
head(xx[,1:3])
draw.signature(S[,2])
library(vrnmf)
library(spacemut)
draw.signature(S[,2])
rm(factor_intensities())
rm(factor_intensities)
?factor_intensities
intensities.info <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = FALSE)
remove.packages("vrnmf")
devtools::install_github("kharchenkolab/vrnmf")
library(vrnmf)
intensities.info <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = FALSE)
intensities.info <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = FALSE)
factor_intensities
remove.packages("vrnmf")
library(vrnmf)
remove.packages("vrnmf")
remove.packages("vrnmf")
library(vrnmf)
?factor_intensities
?factor_intensities
devtools::install_github("kharchenkolab/vrnmf")
library(vrnmf)
?factor_intensities
factor_intensities
factor_intensities
rm(factor_intensities())
rm(factor_intensities
)
?factor_intensities
?factor_intensities
?factor_intensities
remove.packages("vrnmf")
remove.packages("vrnmf")
devtools::install_github("kharchenkolab/vrnmf")
library(vrnmf)
?factor_intensities
?factor_intensities
intensities.info <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = FALSE)
factor_intensities
library(vrnmf)
vr <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
vr <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
library(vrnmf)
rm(factor_intensities)
library(vrnmf)
vr <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
draw.signature(S[,2])
library(vrnmf)
library(spacemut)
draw.signature(S[,2])
intensities.info <- factor_intensities(as.matrix(vr$C), t(as.matrix(vol.info$X.process)),
fit.nmf = FALSE, fit.factor = TRUE,
n.iter = 1e+2, verbose = FALSE)
knitr::knit(input='/d0/home/solrust/mutations/spacemut/vignettes/vrnmf_germline.Rmd',
output='/d0/home/solrust/mutations/spacemut/vignettes/vrnmf_germline.md')
devtools::load_all("~/mutations/spacemut")
devtools::load_all("~/mutations/spacemut")
devtools::load_all("~/mutations/spacemut")
devtools::load_all("~/mutations/spacemut")
devtools::load_all("~/mutations/spacemut")
devtools::load_all("~/mutations/spacemut")
vr1 <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
library(vrnmf)
library(vrnmf)
library(spacemut)
vr1 <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
remove.packages("vrnmf")
devtools::install_github("kharchenkolab/vrnmf")
library(vrnmf)
vr1 <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
?volnmf_main
volnmf_main
library(vrnmf)
vr1 <- vrnmf::volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
remove.packages("vrnmf")
remove.packages("vrnmf")
library(vrnmf)
?volnmf_main
vr1 <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
devtools::install_github("kharchenkolab/vrnmf")
?library
library(vrnmf)
vr1 <- volnmf_main(vol.info, n.comp = 14, wvol = 7.9e-3, seed = 1,
n.iter = 3e+3, vol.iter = 1e+1, c.iter = 1e+1,
verbose = FALSE)
??install_github
?install_github
remove.packages("vrnmf")
?library
devtools::install_github("kharchenkolab/vrnmf")
library(vrnmf)
volnmf_main
