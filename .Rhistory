devtools::document()
devtools::install()
library(spacemut)
info <- read.table("http://pklab.med.harvard.edu/ruslan/spacemut/TOPMed.30kb.txt",header=TRUE)
info <- read.table("http://pklab.med.harvard.edu/ruslan/spacemut/mut.txt",header=TRUE)
info <- read.table("http://pklab.med.harvard.edu/ruslan/mut.txt",header=TRUE)
dim(info)
head(info[,1:6])
knitr::kable(head(info[,1:6]))
rate <- info[,-c(1:3)]
comp.info <- extract.comp(rate,13)
icM <- comp.info[[1]]
head(icM[,1:4])
knitr::kable(head(icM[,1:4]))
icS <- comp.info[[2]]
head(icS[,1:4])
plot.reflection.matrix(icM)
reflection.scatter(3,3,icM)
reflection.scatter(1,1,icM)
reflection.scatter(1,2,icM)
apply(icM,2,mean)
ref.prop <- reflection.test(icM)
head(ref.prop[[1]])
knitr::kable(head(ref.prop[[1]]))
draw.signature(icM[,3])
plot.intensities(icS[,4]+icS[,5], info, chr=8, start=0,end=4e+7,  span.wind=30)
boot <- spectra.bootstrap(icM,rate,n.boot=500,n.cores=20)
visualize.bootstrap(boot,icM=icM)
stat.extract <- select.ncomponents(rate,n.min=2,n.max=35,cutoff=0.8,n.cores=20)
head(stat.extract)
show.optimal.comp(stat.extract)
comp.info
length(comp.info)
dim(comp.info[[1]])
dim(icS)
rearrange.components <- function(comp.info,process.order){
if ( min(process.order) < 1 | max(process.order) > ncol(comp.info[[1]]) ) {stop("wrong order indices")}
icM <- comp.info[[1]][,process.order]
icS <- comp.info[[2]][,process.order]
colnames(icS) <- paste("comp.", 1:ncol(icS), sep = "")
colnames(icM) <- paste("comp.", 1:ncol(icM), sep = "")
return(list(icM, icS))
}
process.order <- c(1,2,7,10,13,4,5,3,6,12,9,11,8)
comp.info <- rearrange.components(comp.info,process.order)
icM <- comp.info[[1]][process.order,]
head(icM[,1:4])
icS <- comp.info[[2]]
head(icS[,1:4])
plot.reflection.matrix(icM)
str(icM)
icM <- comp.info[[1]]
head(icM[,1:4])
plot.reflection.matrix(icM)
reflection.scatter(3,3,icM)
devtools::document()
devtools::install()
knitr::knit(input='/d0/home/solrust/mutations/spacemut/vignettes/inference_processes.Rmd',
output='/d0/home/solrust/mutations/spacemut/vignettes/inference_processes.md')
q()
