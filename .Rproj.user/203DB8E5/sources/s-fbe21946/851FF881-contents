library("devtools")
library(roxygen2)
setwd("/d0/home/solrust/mutations/spacemut/")

usethis::use_vignette("inference_processes")

usethis::use_package("ica") # Defaults to imports
usethis::use_package("parallel") # Defaults to imports

devtools::document()
devtools::install()

knitr::knit(input='/d0/home/solrust/mutations/spacemut/vignettes/inference_processes.Rmd',
            output='/d0/home/solrust/mutations/spacemut/vignettes/inference_processes.md')



# read matrices
info <- read.table("/d0/home/solrust/mutations/data_release/TOPMed.30kb.txt",header=TRUE)
head(info[,1:6])
rate <- info[,-c(1:3)]

comp.info <- extract.comp(rate,13)
# matrix of components spectra
icM <- comp.info[[1]]
dim(icM)
# matrix of components intensities
icS <- comp.info[[2]]
dim(icS)

# explore reflection properties of components
plot.reflection.matrix(icM)
# draw examples of symmetric and asymmetric components
reflection.scatter(3,3,icM)
reflection.scatter(1,2,icM)

# formally classify components and group in processes
ref.prop <- reflection.test(icM)

# classification of components
head(ref.prop[[1]])
# annotation of processes
head(ref.prop[[2]])

### visualization examples of some components!!!
draw.signature(icM[,10])

# visualization of intensities along the genome
plot.intensities(icS[,1], info, chr=1, start=3e+6,end=1e+7,  span.wind=30)


### 13 could seems as rather arbitrary number of components.
#Below is a test to choose optimal number of components

# gather statistics
stat.extract <- select.ncomponents(rate,n.min=2,n.max=35,cutoff=0.8,n.cores=20)
# show biological components and processes
show.optimal.comp(stat.extract)


# finally, quality of reconstructions can be assessed using bootsrap

# bootstrap of genomic regions
boot <- spectra.bootstrap(icM,rate,n.boot=500,n.cores=10)
visualize.bootstrap(boot,icM=icM)







